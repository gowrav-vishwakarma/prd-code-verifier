# CR (Continuous Review) Mode Environment Configuration
# Copy this file to .env and customize for your setup

# CR Mode Configuration
CR_MODE=github_actions
CR_PROJECT_FILE=projects/cr_example.json
CR_OUTPUT_FOLDER=./output

# Repository URLs (can contain $TOKEN patterns)
# Documentation repository
CR_DOCUMENTATION_REPO_URL=https://github.com/$GITHUB_TOKEN@owner/docs-repo.git
CR_DOCUMENTATION_REPO_BRANCH=main

# Frontend repository
CR_FRONTEND_REPO_URL=https://github.com/$GITHUB_TOKEN@owner/frontend-repo.git
CR_FRONTEND_REPO_BRANCH=develop

# Backend repository
CR_BACKEND_REPO_URL=https://github.com/$GITHUB_TOKEN@owner/backend-repo.git
CR_BACKEND_REPO_BRANCH=main

# AI Configuration
CR_AI_PROVIDER=openai
CR_AI_API_KEY=$OPENAI_API_KEY
CR_AI_MODEL=gpt-3.5-turbo
CR_AI_BASE_URL=https://api.openai.com/v1
CR_AI_TAG=

# Verification Mode
CR_RUN_ALL_VERIFICATIONS=false
# OR specify specific verifications (comma-separated)
# CR_SPECIFIC_VERIFICATIONS=API Documentation Review,Security Review

# Publishing Configuration
CR_PUBLISH_RESULTS=true
CR_PUBLISH_METHOD=github
CR_GITHUB_TOKEN=$GITHUB_TOKEN
CR_GITHUB_REPO=owner/repo-name
CR_GITHUB_BRANCH=main
CR_GITHUB_PATH=reports

# Alternative: FTP Publishing
# CR_PUBLISH_METHOD=ftp
# CR_FTP_HOST=ftp.example.com
# CR_FTP_USERNAME=$FTP_USERNAME
# CR_FTP_PASSWORD=$FTP_PASSWORD
# CR_FTP_PATH=/reports

# Git Configuration
CR_BASE_COMMIT=HEAD~1
CR_TARGET_COMMIT=HEAD

# Application Configuration (same as regular mode)
DEBUG=True
HOST=0.0.0.0
PORT=8000
ENABLE_STREAMING=True

# AI Provider Configuration (fallback for web mode)
DEFAULT_AI_PROVIDER=openai
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-3.5-turbo

# Other AI providers (uncomment as needed)
# GEMINI_API_KEY=your_gemini_api_key_here
# GEMINI_MODEL=gemini-pro
# OLLAMA_BASE_URL=http://localhost:11434
# OLLAMA_MODEL=llama2
# LM_STUDIO_BASE_URL=http://localhost:1234/v1
# LM_STUDIO_MODEL=local-model
